<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>IDEA注释模板</title>
      <link href="/2021/12/02/IDEA%E6%B3%A8%E9%87%8A%E6%A8%A1%E6%9D%BF/"/>
      <url>/2021/12/02/IDEA%E6%B3%A8%E9%87%8A%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="类注释"><a href="#类注释" class="headerlink" title="类注释"></a>类注释</h1><p>打开<code>IDEA</code>的<code>Settings</code>，点击<code>Editor--&gt;File and Code Templates</code>，点击右边<code>File</code>选项卡下面的<code>Class</code>，在其中添加图中红框内的内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#<span class="keyword">if</span> ($&#123;PACKAGE_NAME&#125; &amp;&amp; $&#123;PACKAGE_NAME&#125; != <span class="string">&quot;&quot;</span>)<span class="keyword">package</span> $&#123;PACKAGE_NAME&#125;;#end</span><br><span class="line">#parse(<span class="string">&quot;File Header.java&quot;</span>)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> echo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> $&#123;YEAR&#125;年 $&#123;MONTH&#125;月 $&#123;DAY&#125;日 $&#123;TIME&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> $</span>&#123;NAME&#125; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><center><p><img src="https://cdn.jsdelivr.net/gh/atideas/assets//blog/1638440757/1639447118-cca895f6.png"></p></center><p>在我提供的示例模板中，说明了作者和时间，<code>IDEA</code>支持的所有的模板参数在下方的<code>Description</code>中被列出来。</p><p>保存后，当你创建一个新的类的时候就会自动添加类注释。如果你想对接口也生效，同时配置上图中的<code>Interface</code>项即可。</p><h1 id="方法注释"><a href="#方法注释" class="headerlink" title="方法注释"></a>方法注释</h1><p>不同于目前网络上互相复制粘贴的方法注释教程，本文将实现以下功能：</p><ul><li><p>根据形参数目自动生成<code>@param</code>注解</p></li><li><p>根据方法是否有返回值智能生成<code>@Return</code>注解</p></li></ul><p>相较于类模板，为方法添加注释模板就较为复杂，首先在 <code>Settings</code>中点击<code>Editor--&gt;Live Templates</code>。</p><p>点击最右边的<code>+</code>，首先选择<code>2. Template Group...</code>来创建一个模板分组：</p><center><p><img src="https://cdn.jsdelivr.net/gh/atideas/assets//blog/1638440757/1639447268-7e879ed1.png"></p></center><p>在弹出的对话框中填写分组名，我这里叫做<code>userDefine</code>：</p><center><p><img src="https://cdn.jsdelivr.net/gh/atideas/assets//blog/1638440757/1639447293-826a9a69.png"></p></center><p>然后选中刚刚创建的模板分组<code>userDefine</code>，然后点击<code>+</code>，选择<code>1. Live Template</code>：</p><center><p><img src="https://cdn.jsdelivr.net/gh/atideas/assets//blog/1638440757/1639447312-09f1391e.png"></p></center><p>此时就会创建了一个空的模板，我们修改该模板的<code>Abbreviation、Description</code>和<code>Template text</code>。需要注意的是，<code>Abbreviation</code>必须为<code>*</code>，最后检查下<code>Expand with</code>的值是否为<code>Enter</code>键。</p><center><p><img src="https://cdn.jsdelivr.net/gh/atideas/assets//blog/1638440757/1639447330-b80388cc.png"></p></center><p>上图中· <code>Template text</code>内容如下，需要注意首行没有 <code>/</code>，且<code>*</code>是顶格的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line"> *</span><br><span class="line"> * <span class="meta">@author</span> echo</span><br><span class="line"> * <span class="meta">@date</span> $date$ $time$$param$ $<span class="keyword">return</span>$</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p>注意到右下角的<code>No applicable contexts yet</code>了吗，这说明此时这个模板还没有指定应用的语言。</p><p>点击<code>Define</code>，在弹框中勾选<code>Java</code>，表示将该模板应用于所有的<code>Java</code>类型文件。</p><center><p><img src="https://cdn.jsdelivr.net/gh/atideas/assets//blog/1638440757/1639447344-023bef64.png"></p></center><h2 id="设置applicable-contexts"><a href="#设置applicable-contexts" class="headerlink" title="设置applicable contexts"></a>设置<code>applicable contexts</code></h2><p>还记得我们配置<code>Template text</code>时里面包含了类似于<code>$date$</code>这样的参数，此时<code>IDEA</code>还不认识这些参数是啥玩意，下面我们对这些参数进行方法映射，让<code>IDEA</code>能够明白这些参数的含义。</p><p>点击<code>Edit variables</code>按钮：</p><center><p><img src="https://cdn.jsdelivr.net/gh/atideas/assets//blog/1638440757/1639447361-36bb9d1a.png"></p></center><p>为每一个参数设置相对应的<code>Expression</code>：</p><center><p><img src="https://cdn.jsdelivr.net/gh/atideas/assets//blog/1638440757/1639447378-41b78fa9.png"></p></center><h2 id="设置Expression"><a href="#设置Expression" class="headerlink" title="设置Expression"></a>设置<code>Expression</code></h2><p>需要注意的是，<code>date</code>和<code>time</code>的<code>Expression</code>使用的是<code>IDEA</code>内置的函数，直接使用下拉框选择就可以了，而<code>param</code>这个参数<code>IDEA</code>默认的实现很差，因此我们需要手动实现，代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groovyScript(&quot;def result = &#x27;&#x27;;def params = \&quot;$&#123;_1&#125;\&quot;.replaceAll(&#x27;[\\\\[|\\\\]|\\\\s]&#x27;, &#x27;&#x27;).split(&#x27;,&#x27;).toList(); for(i = 0; i &lt; params.size(); i++) &#123;if(params[i] != &#x27;&#x27;)result+=&#x27;* @param &#x27; + params[i] + ((i &lt; params.size() - 1) ? &#x27;\\r\\n &#x27; : &#x27;&#x27;)&#125;; return result == &#x27;&#x27; ? null : &#x27;\\r\\n &#x27; + result&quot;, methodParameters())</span><br></pre></td></tr></table></figure><p>另外<code>return</code>这个参数也要实现了下，代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groovyScript(&quot;return \&quot;$&#123;_1&#125;\&quot; == &#x27;void&#x27; ? null : &#x27;\\r\\n * @return &#x27; + \&quot;$&#123;_1&#125;\&quot;&quot;, methodReturnType())</span><br></pre></td></tr></table></figure><blockquote><p>注：你还注意到我并没有勾选<code>Skip if defined</code>属性，它的意思是如果在生成注释时候如果这一项被定义了，那么鼠标光标就会直接跳过它。我并不需要这个功能，因此有被勾选该属性。</p></blockquote><p>点击<code>OK</code>保存设置，大功告成！</p><h1 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q &amp; A"></a>Q &amp; A</h1><ol><li><p>为什么模板的<code>Abbreviation</code>一定要叫<code>*</code>？<code>Expand with</code>要保证是<code>Enter</code>键？</p><blockquote><p>答：因为<code>IDEA</code>模板的生成逻辑是<code>模板名 + 生成键</code>，当生成键是<code>Enter</code>时，我们输入<code>* + Enter</code>就能够触发模板。<br> 这也同时说明了为什么注释模板首行是一个<code>*</code>了，因为当我们先输入<code>/*</code>，然后输入<code>* + Enter</code>，触发模板，首行正好拼成了<code>/**</code>，符合<code>Javadoc</code>的规范。</p></blockquote></li><li><p>注释模板中为什么有一行空的<code>*</code>？</p><blockquote><p>答：因为我习惯在这一行写方法说明，所以就预留了一行空的写，你也可以把它删掉。</p></blockquote></li><li><p>注释模板中<code>$time$$param$</code> `这两个明明不相干的东西为什么紧贴在一起？</p><blockquote><p>答：首先网上提供的大部分<code>param</code>生成函数在无参情况下仍然会生成一行空的<code>@param</code>，因此我对<code>param</code>函数的代码进行修改，使得在无参情况下不生成<code>@param</code>，但是这就要求<code>$param$</code>要和别人处在同一行中，不然没法处理退格。</p></blockquote></li><li><p>为什么<code>return</code>参数不使用<code>methodReturnType()</code>， 而要自己实现？</p><blockquote><p>答：<code>methodReturnType()</code>在无返回值的情况下会返回<code>void</code>，这并没有什么意义，因此我对<code>methodReturnType()</code>返回值进行了处理，仅在有返回值时才生成。</p></blockquote></li><li><p>为什么<code>$return$</code> `不是单独一行？</p><blockquote><p>答：因为当<code>methodReturnType()</code>返回<code>null</code>时，无法处理退格问题，原因同第三点。</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/12/01/hello-world/"/>
      <url>/2021/12/01/hello-world/</url>
      
        <content type="html"><![CDATA[<blockquote><h1 id="你好"><a href="#你好" class="headerlink" title="你好"></a>你好</h1></blockquote><p>欢迎来到我的博客，今天，2021年12月1日，是我的博客的出生日。</p><p>这篇文章是用来测试的，因为博客刚跟建立，所以可能会有一些小问题，还请多多包涵。如果遇到问题，可以在评论区给我留言。</p><p>如果您也有博客，欢迎前往<a href="/link/">友链</a>，在评论区中留言与我互换友链信息。</p><center><p><img src="https://cdn.jsdelivr.net/gh/atideas/assets//blog/static/helloworld.jpg"></p></center><blockquote><h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World!"></a>Hello World!</h1></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello, World&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
